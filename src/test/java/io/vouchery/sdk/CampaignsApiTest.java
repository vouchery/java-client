/*
 * Vouchery API Reference
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: hello@vouchery.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.vouchery.sdk;

import io.vouchery.sdk.ApiException;
import org.openapitools.client.model.Campaign;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CampaignsApi
 */
@Ignore
public class CampaignsApiTest {

    private final CampaignsApi api = new CampaignsApi();

    
    /**
     * Create a campaign
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createCampaignTest() throws ApiException {
        Campaign campaign = null;
        Campaign response = api.createCampaign(campaign);

        // TODO: test validations
    }
    
    /**
     * Delete a campaign
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCampaignTest() throws ApiException {
        Integer id = null;
        api.deleteCampaign(id);

        // TODO: test validations
    }
    
    /**
     * Get sub campaigns by params
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void findSubCampaignsTest() throws ApiException {
        String nameCont = null;
        String statusEq = null;
        String templateEq = null;
        String triggersOnEq = null;
        String triggerNameCont = null;
        List<Campaign> response = api.findSubCampaigns(nameCont, statusEq, templateEq, triggersOnEq, triggerNameCont);

        // TODO: test validations
    }
    
    /**
     * Get a campaign
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCampaignTest() throws ApiException {
        Integer id = null;
        Campaign response = api.getCampaign(id);

        // TODO: test validations
    }
    
    /**
     * Get main campaigns with children by params
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCampaignsTest() throws ApiException {
        String nameCont = null;
        String teamEq = null;
        String statusEq = null;
        String templateEq = null;
        List<Campaign> response = api.getCampaigns(nameCont, teamEq, statusEq, templateEq);

        // TODO: test validations
    }
    
    /**
     * Update a campaign
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateCampaignTest() throws ApiException {
        Integer id = null;
        Campaign campaign = null;
        Campaign response = api.updateCampaign(id, campaign);

        // TODO: test validations
    }
    
}
