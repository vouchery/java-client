/*
 * Vouchery API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: hello@vouchery.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.CampaignCreatedBy;
import org.openapitools.client.model.MainCampaignChildren;
import org.threeten.bp.OffsetDateTime;

/**
 * MainCampaign
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-03-09T14:06:19.023+01:00[Europe/Berlin]")

public class MainCampaign {
  /**
   * This field is required only when you create a campaign. Main Campaign is a wrapper for multipe Sub Campaings, grouped together. Main Campaign can have own budget and redemptions limit.
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    MAINCAMPAIGN("MainCampaign");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  /**
   * What type of trigger sub campaign is reacting on to check rules and give rewards.
   */
  @JsonAdapter(TriggersOnEnum.Adapter.class)
  public enum TriggersOnEnum {
    CUSTOMER_POINTS_CHANGE("customer_points_change"),
    
    REDEMPTION("redemption"),
    
    CUSTOM("custom");

    private String value;

    TriggersOnEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TriggersOnEnum fromValue(String value) {
      for (TriggersOnEnum b : TriggersOnEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TriggersOnEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TriggersOnEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TriggersOnEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TriggersOnEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TRIGGERS_ON = "triggers_on";
  @SerializedName(SERIALIZED_NAME_TRIGGERS_ON)
  private TriggersOnEnum triggersOn;

  public static final String SERIALIZED_NAME_TRIGGER_NAME = "trigger_name";
  @SerializedName(SERIALIZED_NAME_TRIGGER_NAME)
  private String triggerName;

  /**
   * Valid template values for MainCampaign are: discount, loyalty, gift_card.
   */
  @JsonAdapter(TemplateEnum.Adapter.class)
  public enum TemplateEnum {
    DISCOUNT("discount"),
    
    LOYALTY("loyalty"),
    
    GIFT_CARD("gift_card");

    private String value;

    TemplateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TemplateEnum fromValue(String value) {
      for (TemplateEnum b : TemplateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TemplateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TemplateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TemplateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TemplateEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TEMPLATE = "template";
  @SerializedName(SERIALIZED_NAME_TEMPLATE)
  private TemplateEnum template;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_MAX_TOTAL_BUDGET = "max_total_budget";
  @SerializedName(SERIALIZED_NAME_MAX_TOTAL_BUDGET)
  private BigDecimal maxTotalBudget;

  public static final String SERIALIZED_NAME_MAX_REDEMPTIONS = "max_redemptions";
  @SerializedName(SERIALIZED_NAME_MAX_REDEMPTIONS)
  private BigDecimal maxRedemptions;

  public static final String SERIALIZED_NAME_TEAM = "team";
  @SerializedName(SERIALIZED_NAME_TEAM)
  private String team;

  public static final String SERIALIZED_NAME_BUDGET_CODE = "budget_code";
  @SerializedName(SERIALIZED_NAME_BUDGET_CODE)
  private String budgetCode;

  public static final String SERIALIZED_NAME_CHILDREN = "children";
  @SerializedName(SERIALIZED_NAME_CHILDREN)
  private List<MainCampaignChildren> children = null;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_CREATED_BY = "created_by";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private CampaignCreatedBy createdBy;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private OffsetDateTime updatedAt;

  public static final String SERIALIZED_NAME_UPDATED_BY = "updated_by";
  @SerializedName(SERIALIZED_NAME_UPDATED_BY)
  private CampaignCreatedBy updatedBy;

  public MainCampaign() {
    this.type = this.getClass().getSimpleName();
  }

  public MainCampaign type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * This field is required only when you create a campaign. Main Campaign is a wrapper for multipe Sub Campaings, grouped together. Main Campaign can have own budget and redemptions limit.
   * @return type
  **/
  @ApiModelProperty(required = true, value = "This field is required only when you create a campaign. Main Campaign is a wrapper for multipe Sub Campaings, grouped together. Main Campaign can have own budget and redemptions limit.")

  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    this.type = type;
  }


   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getId() {
    return id;
  }




  public MainCampaign name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The name of the campaign must be unique.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "The name of the campaign must be unique.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public MainCampaign triggersOn(TriggersOnEnum triggersOn) {
    
    this.triggersOn = triggersOn;
    return this;
  }

   /**
   * What type of trigger sub campaign is reacting on to check rules and give rewards.
   * @return triggersOn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "What type of trigger sub campaign is reacting on to check rules and give rewards.")

  public TriggersOnEnum getTriggersOn() {
    return triggersOn;
  }


  public void setTriggersOn(TriggersOnEnum triggersOn) {
    this.triggersOn = triggersOn;
  }


  public MainCampaign triggerName(String triggerName) {
    
    this.triggerName = triggerName;
    return this;
  }

   /**
   * If campaign is triggered by custom trigger, it&#39;s name should be specified.
   * @return triggerName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If campaign is triggered by custom trigger, it's name should be specified.")

  public String getTriggerName() {
    return triggerName;
  }


  public void setTriggerName(String triggerName) {
    this.triggerName = triggerName;
  }


  public MainCampaign template(TemplateEnum template) {
    
    this.template = template;
    return this;
  }

   /**
   * Valid template values for MainCampaign are: discount, loyalty, gift_card.
   * @return template
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Valid template values for MainCampaign are: discount, loyalty, gift_card.")

  public TemplateEnum getTemplate() {
    return template;
  }


  public void setTemplate(TemplateEnum template) {
    this.template = template;
  }


  public MainCampaign description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public MainCampaign maxTotalBudget(BigDecimal maxTotalBudget) {
    
    this.maxTotalBudget = maxTotalBudget;
    return this;
  }

   /**
   * The budget available for all discount campaigns grouped by this campaign.
   * @return maxTotalBudget
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The budget available for all discount campaigns grouped by this campaign.")

  public BigDecimal getMaxTotalBudget() {
    return maxTotalBudget;
  }


  public void setMaxTotalBudget(BigDecimal maxTotalBudget) {
    this.maxTotalBudget = maxTotalBudget;
  }


  public MainCampaign maxRedemptions(BigDecimal maxRedemptions) {
    
    this.maxRedemptions = maxRedemptions;
    return this;
  }

   /**
   * The maximum number of redemptions available across all discount campaigns grouped by this campaign.
   * @return maxRedemptions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The maximum number of redemptions available across all discount campaigns grouped by this campaign.")

  public BigDecimal getMaxRedemptions() {
    return maxRedemptions;
  }


  public void setMaxRedemptions(BigDecimal maxRedemptions) {
    this.maxRedemptions = maxRedemptions;
  }


  public MainCampaign team(String team) {
    
    this.team = team;
    return this;
  }

   /**
   * Get team
   * @return team
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTeam() {
    return team;
  }


  public void setTeam(String team) {
    this.team = team;
  }


  public MainCampaign budgetCode(String budgetCode) {
    
    this.budgetCode = budgetCode;
    return this;
  }

   /**
   * Get budgetCode
   * @return budgetCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBudgetCode() {
    return budgetCode;
  }


  public void setBudgetCode(String budgetCode) {
    this.budgetCode = budgetCode;
  }


   /**
   * List of child campaigns
   * @return children
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of child campaigns")

  public List<MainCampaignChildren> getChildren() {
    return children;
  }




   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }




  public MainCampaign createdBy(CampaignCreatedBy createdBy) {
    
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Get createdBy
   * @return createdBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CampaignCreatedBy getCreatedBy() {
    return createdBy;
  }


  public void setCreatedBy(CampaignCreatedBy createdBy) {
    this.createdBy = createdBy;
  }


   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }




  public MainCampaign updatedBy(CampaignCreatedBy updatedBy) {
    
    this.updatedBy = updatedBy;
    return this;
  }

   /**
   * Get updatedBy
   * @return updatedBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CampaignCreatedBy getUpdatedBy() {
    return updatedBy;
  }


  public void setUpdatedBy(CampaignCreatedBy updatedBy) {
    this.updatedBy = updatedBy;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MainCampaign mainCampaign = (MainCampaign) o;
    return Objects.equals(this.type, mainCampaign.type) &&
        Objects.equals(this.id, mainCampaign.id) &&
        Objects.equals(this.name, mainCampaign.name) &&
        Objects.equals(this.triggersOn, mainCampaign.triggersOn) &&
        Objects.equals(this.triggerName, mainCampaign.triggerName) &&
        Objects.equals(this.template, mainCampaign.template) &&
        Objects.equals(this.description, mainCampaign.description) &&
        Objects.equals(this.maxTotalBudget, mainCampaign.maxTotalBudget) &&
        Objects.equals(this.maxRedemptions, mainCampaign.maxRedemptions) &&
        Objects.equals(this.team, mainCampaign.team) &&
        Objects.equals(this.budgetCode, mainCampaign.budgetCode) &&
        Objects.equals(this.children, mainCampaign.children) &&
        Objects.equals(this.createdAt, mainCampaign.createdAt) &&
        Objects.equals(this.createdBy, mainCampaign.createdBy) &&
        Objects.equals(this.updatedAt, mainCampaign.updatedAt) &&
        Objects.equals(this.updatedBy, mainCampaign.updatedBy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, id, name, triggersOn, triggerName, template, description, maxTotalBudget, maxRedemptions, team, budgetCode, children, createdAt, createdBy, updatedAt, updatedBy);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MainCampaign {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    triggersOn: ").append(toIndentedString(triggersOn)).append("\n");
    sb.append("    triggerName: ").append(toIndentedString(triggerName)).append("\n");
    sb.append("    template: ").append(toIndentedString(template)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    maxTotalBudget: ").append(toIndentedString(maxTotalBudget)).append("\n");
    sb.append("    maxRedemptions: ").append(toIndentedString(maxRedemptions)).append("\n");
    sb.append("    team: ").append(toIndentedString(team)).append("\n");
    sb.append("    budgetCode: ").append(toIndentedString(budgetCode)).append("\n");
    sb.append("    children: ").append(toIndentedString(children)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    updatedBy: ").append(toIndentedString(updatedBy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

