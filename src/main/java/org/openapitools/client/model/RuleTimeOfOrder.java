/*
 * Vouchery API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: hello@vouchery.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * RuleTimeOfOrder
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-03-09T14:06:19.023+01:00[Europe/Berlin]")
public class RuleTimeOfOrder {
  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    TIMEOFORDER("TimeOfOrder");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_START_TIME = "start_time";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private String startTime;

  public static final String SERIALIZED_NAME_END_TIME = "end_time";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private String endTime;

  public static final String SERIALIZED_NAME_DAYS_OF_WEEK = "days_of_week";
  @SerializedName(SERIALIZED_NAME_DAYS_OF_WEEK)
  private List<Integer> daysOfWeek = new ArrayList<Integer>();

  public static final String SERIALIZED_NAME_TIME_ZONE = "time_zone";
  @SerializedName(SERIALIZED_NAME_TIME_ZONE)
  private String timeZone;


  public RuleTimeOfOrder type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(required = true, value = "")

  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    this.type = type;
  }


  public RuleTimeOfOrder startTime(String startTime) {
    
    this.startTime = startTime;
    return this;
  }

   /**
   * Time in 24-hour format: HH:MM
   * @return startTime
  **/
  @ApiModelProperty(required = true, value = "Time in 24-hour format: HH:MM")

  public String getStartTime() {
    return startTime;
  }


  public void setStartTime(String startTime) {
    this.startTime = startTime;
  }


  public RuleTimeOfOrder endTime(String endTime) {
    
    this.endTime = endTime;
    return this;
  }

   /**
   * Time in 24-hour format: HH:MM
   * @return endTime
  **/
  @ApiModelProperty(required = true, value = "Time in 24-hour format: HH:MM")

  public String getEndTime() {
    return endTime;
  }


  public void setEndTime(String endTime) {
    this.endTime = endTime;
  }


  public RuleTimeOfOrder daysOfWeek(List<Integer> daysOfWeek) {
    
    this.daysOfWeek = daysOfWeek;
    return this;
  }

  public RuleTimeOfOrder addDaysOfWeekItem(Integer daysOfWeekItem) {
    this.daysOfWeek.add(daysOfWeekItem);
    return this;
  }

   /**
   * Array of days of week, where Sunday is 0, Monday is 1, Saturday is 6
   * @return daysOfWeek
  **/
  @ApiModelProperty(required = true, value = "Array of days of week, where Sunday is 0, Monday is 1, Saturday is 6")

  public List<Integer> getDaysOfWeek() {
    return daysOfWeek;
  }


  public void setDaysOfWeek(List<Integer> daysOfWeek) {
    this.daysOfWeek = daysOfWeek;
  }


  public RuleTimeOfOrder timeZone(String timeZone) {
    
    this.timeZone = timeZone;
    return this;
  }

   /**
   * Time zone name as defined in the [tz database](http://www.iana.org/time-zones) (e.g. Europe/London)
   * @return timeZone
  **/
  @ApiModelProperty(required = true, value = "Time zone name as defined in the [tz database](http://www.iana.org/time-zones) (e.g. Europe/London)")

  public String getTimeZone() {
    return timeZone;
  }


  public void setTimeZone(String timeZone) {
    this.timeZone = timeZone;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RuleTimeOfOrder ruleTimeOfOrder = (RuleTimeOfOrder) o;
    return Objects.equals(this.type, ruleTimeOfOrder.type) &&
        Objects.equals(this.startTime, ruleTimeOfOrder.startTime) &&
        Objects.equals(this.endTime, ruleTimeOfOrder.endTime) &&
        Objects.equals(this.daysOfWeek, ruleTimeOfOrder.daysOfWeek) &&
        Objects.equals(this.timeZone, ruleTimeOfOrder.timeZone);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, startTime, endTime, daysOfWeek, timeZone);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RuleTimeOfOrder {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    daysOfWeek: ").append(toIndentedString(daysOfWeek)).append("\n");
    sb.append("    timeZone: ").append(toIndentedString(timeZone)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

