/*
 * Vouchery API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: hello@vouchery.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import org.openapitools.client.model.CampaignCreatedBy;
import org.threeten.bp.OffsetDateTime;

/**
 * Campaign
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-03-09T14:06:19.023+01:00[Europe/Berlin]")

public class Campaign {
  /**
   * This field is required only when you create a campaign. Main Campaign is a wrapper for multipe Sub Campaings, grouped together. Main Campaign can have own budget and redemptions limit.
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    MAINCAMPAIGN("MainCampaign"),
    
    SUBCAMPAIGN("SubCampaign");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_PARENT_ID = "parent_id";
  @SerializedName(SERIALIZED_NAME_PARENT_ID)
  private Integer parentId;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    DRAFT("draft"),
    
    ACTIVE("active"),
    
    INACTIVE("inactive"),
    
    ARCHIVED("archived");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  /**
   * What type of trigger sub campaign is reacting on to check rules and give rewards.
   */
  @JsonAdapter(TriggersOnEnum.Adapter.class)
  public enum TriggersOnEnum {
    CUSTOMER_POINTS_CHANGE("customer_points_change"),
    
    REDEMPTION("redemption"),
    
    CUSTOM("custom");

    private String value;

    TriggersOnEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TriggersOnEnum fromValue(String value) {
      for (TriggersOnEnum b : TriggersOnEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TriggersOnEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TriggersOnEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TriggersOnEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TriggersOnEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TRIGGERS_ON = "triggers_on";
  @SerializedName(SERIALIZED_NAME_TRIGGERS_ON)
  private TriggersOnEnum triggersOn;

  public static final String SERIALIZED_NAME_TRIGGER_NAME = "trigger_name";
  @SerializedName(SERIALIZED_NAME_TRIGGER_NAME)
  private String triggerName;

  /**
   * Valid template values for MainCampaign are: discount, loyalty, gift_card. For SubCampaign valid templates are sub_redemption, sub_reward_points, sub_generate_vouchers.
   */
  @JsonAdapter(TemplateEnum.Adapter.class)
  public enum TemplateEnum {
    DISCOUNT("discount"),
    
    LOYALTY("loyalty"),
    
    GIFT_CARD("gift_card"),
    
    SUB_REDEMPTION("sub_redemption"),
    
    SUB_REWARD_POINTS("sub_reward_points"),
    
    SUB_GENERATE_VOUCHERS("sub_generate_vouchers");

    private String value;

    TemplateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TemplateEnum fromValue(String value) {
      for (TemplateEnum b : TemplateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TemplateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TemplateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TemplateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TemplateEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TEMPLATE = "template";
  @SerializedName(SERIALIZED_NAME_TEMPLATE)
  private TemplateEnum template;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_CUSTOMER_INFORMATION = "customer_information";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_INFORMATION)
  private String customerInformation;

  public static final String SERIALIZED_NAME_MAX_TOTAL_BUDGET = "max_total_budget";
  @SerializedName(SERIALIZED_NAME_MAX_TOTAL_BUDGET)
  private BigDecimal maxTotalBudget;

  public static final String SERIALIZED_NAME_MAX_REDEMPTIONS = "max_redemptions";
  @SerializedName(SERIALIZED_NAME_MAX_REDEMPTIONS)
  private BigDecimal maxRedemptions;

  public static final String SERIALIZED_NAME_MINIMUM_VALUE = "minimum_value";
  @SerializedName(SERIALIZED_NAME_MINIMUM_VALUE)
  private BigDecimal minimumValue;

  public static final String SERIALIZED_NAME_MAX_DISCOUNT = "max_discount";
  @SerializedName(SERIALIZED_NAME_MAX_DISCOUNT)
  private BigDecimal maxDiscount;

  public static final String SERIALIZED_NAME_REDEMPTIONS_COUNT = "redemptions_count";
  @SerializedName(SERIALIZED_NAME_REDEMPTIONS_COUNT)
  private BigDecimal redemptionsCount;

  public static final String SERIALIZED_NAME_TOTAL_BUDGET_SPENT = "total_budget_spent";
  @SerializedName(SERIALIZED_NAME_TOTAL_BUDGET_SPENT)
  private BigDecimal totalBudgetSpent;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private String currency;

  public static final String SERIALIZED_NAME_CURRENCY_SYMBOL = "currency_symbol";
  @SerializedName(SERIALIZED_NAME_CURRENCY_SYMBOL)
  private String currencySymbol;

  public static final String SERIALIZED_NAME_TEAM = "team";
  @SerializedName(SERIALIZED_NAME_TEAM)
  private String team;

  public static final String SERIALIZED_NAME_CHANNEL = "channel";
  @SerializedName(SERIALIZED_NAME_CHANNEL)
  private String channel;

  public static final String SERIALIZED_NAME_PURPOSE = "purpose";
  @SerializedName(SERIALIZED_NAME_PURPOSE)
  private String purpose;

  public static final String SERIALIZED_NAME_BUDGET_CODE = "budget_code";
  @SerializedName(SERIALIZED_NAME_BUDGET_CODE)
  private String budgetCode;

  public static final String SERIALIZED_NAME_MEDIUM = "medium";
  @SerializedName(SERIALIZED_NAME_MEDIUM)
  private String medium;

  /**
   * Determines what type of vouchers can be generated for campaign. Generic vouchers (eg. SALE10) can be redeemed multiple times. Unique vouchers allow for greater control and better tracking of who and how is using your promotions.
   */
  @JsonAdapter(VoucherTypeEnum.Adapter.class)
  public enum VoucherTypeEnum {
    UNIQUE("unique"),
    
    GENERIC("generic");

    private String value;

    VoucherTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static VoucherTypeEnum fromValue(String value) {
      for (VoucherTypeEnum b : VoucherTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<VoucherTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final VoucherTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public VoucherTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return VoucherTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_VOUCHER_TYPE = "voucher_type";
  @SerializedName(SERIALIZED_NAME_VOUCHER_TYPE)
  private VoucherTypeEnum voucherType;

  /**
   * What characters should the code include when new voucher is created. Possible choices are digits, letters, and mixed.
   */
  @JsonAdapter(VoucherCodeTypeEnum.Adapter.class)
  public enum VoucherCodeTypeEnum {
    DIGITS("digits"),
    
    LETTERS("letters"),
    
    MIXED("mixed");

    private String value;

    VoucherCodeTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static VoucherCodeTypeEnum fromValue(String value) {
      for (VoucherCodeTypeEnum b : VoucherCodeTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<VoucherCodeTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final VoucherCodeTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public VoucherCodeTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return VoucherCodeTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_VOUCHER_CODE_TYPE = "voucher_code_type";
  @SerializedName(SERIALIZED_NAME_VOUCHER_CODE_TYPE)
  private VoucherCodeTypeEnum voucherCodeType;

  public static final String SERIALIZED_NAME_VOUCHER_RANDOM_PART_LENGTH = "voucher_random_part_length";
  @SerializedName(SERIALIZED_NAME_VOUCHER_RANDOM_PART_LENGTH)
  private BigDecimal voucherRandomPartLength;

  public static final String SERIALIZED_NAME_VOUCHER_PREFIX = "voucher_prefix";
  @SerializedName(SERIALIZED_NAME_VOUCHER_PREFIX)
  private String voucherPrefix;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_CREATED_BY = "created_by";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private CampaignCreatedBy createdBy;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private OffsetDateTime updatedAt;

  public static final String SERIALIZED_NAME_UPDATED_BY = "updated_by";
  @SerializedName(SERIALIZED_NAME_UPDATED_BY)
  private CampaignCreatedBy updatedBy;

  public Campaign() {
    this.type = this.getClass().getSimpleName();
  }

  public Campaign type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * This field is required only when you create a campaign. Main Campaign is a wrapper for multipe Sub Campaings, grouped together. Main Campaign can have own budget and redemptions limit.
   * @return type
  **/
  @ApiModelProperty(required = true, value = "This field is required only when you create a campaign. Main Campaign is a wrapper for multipe Sub Campaings, grouped together. Main Campaign can have own budget and redemptions limit.")

  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    this.type = type;
  }


   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getId() {
    return id;
  }




  public Campaign parentId(Integer parentId) {
    
    this.parentId = parentId;
    return this;
  }

   /**
   * Required only for subcampaigns.
   * @return parentId
  **/
  @ApiModelProperty(required = true, value = "Required only for subcampaigns.")

  public Integer getParentId() {
    return parentId;
  }


  public void setParentId(Integer parentId) {
    this.parentId = parentId;
  }


  public Campaign status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public StatusEnum getStatus() {
    return status;
  }


  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public Campaign name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The name of the campaign must be unique.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "The name of the campaign must be unique.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public Campaign triggersOn(TriggersOnEnum triggersOn) {
    
    this.triggersOn = triggersOn;
    return this;
  }

   /**
   * What type of trigger sub campaign is reacting on to check rules and give rewards.
   * @return triggersOn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "What type of trigger sub campaign is reacting on to check rules and give rewards.")

  public TriggersOnEnum getTriggersOn() {
    return triggersOn;
  }


  public void setTriggersOn(TriggersOnEnum triggersOn) {
    this.triggersOn = triggersOn;
  }


  public Campaign triggerName(String triggerName) {
    
    this.triggerName = triggerName;
    return this;
  }

   /**
   * If campaign is triggered by custom trigger, it&#39;s name should be specified.
   * @return triggerName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If campaign is triggered by custom trigger, it's name should be specified.")

  public String getTriggerName() {
    return triggerName;
  }


  public void setTriggerName(String triggerName) {
    this.triggerName = triggerName;
  }


  public Campaign template(TemplateEnum template) {
    
    this.template = template;
    return this;
  }

   /**
   * Valid template values for MainCampaign are: discount, loyalty, gift_card. For SubCampaign valid templates are sub_redemption, sub_reward_points, sub_generate_vouchers.
   * @return template
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Valid template values for MainCampaign are: discount, loyalty, gift_card. For SubCampaign valid templates are sub_redemption, sub_reward_points, sub_generate_vouchers.")

  public TemplateEnum getTemplate() {
    return template;
  }


  public void setTemplate(TemplateEnum template) {
    this.template = template;
  }


  public Campaign description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public Campaign customerInformation(String customerInformation) {
    
    this.customerInformation = customerInformation;
    return this;
  }

   /**
   * Text that can be displayed to the customer once the redemption is validated or confirmed.
   * @return customerInformation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Text that can be displayed to the customer once the redemption is validated or confirmed.")

  public String getCustomerInformation() {
    return customerInformation;
  }


  public void setCustomerInformation(String customerInformation) {
    this.customerInformation = customerInformation;
  }


  public Campaign maxTotalBudget(BigDecimal maxTotalBudget) {
    
    this.maxTotalBudget = maxTotalBudget;
    return this;
  }

   /**
   * The budget available for all discount campaigns grouped by this campaign.
   * @return maxTotalBudget
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The budget available for all discount campaigns grouped by this campaign.")

  public BigDecimal getMaxTotalBudget() {
    return maxTotalBudget;
  }


  public void setMaxTotalBudget(BigDecimal maxTotalBudget) {
    this.maxTotalBudget = maxTotalBudget;
  }


  public Campaign maxRedemptions(BigDecimal maxRedemptions) {
    
    this.maxRedemptions = maxRedemptions;
    return this;
  }

   /**
   * The maximum number of redemptions available across all discount campaigns grouped by this campaign.
   * @return maxRedemptions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The maximum number of redemptions available across all discount campaigns grouped by this campaign.")

  public BigDecimal getMaxRedemptions() {
    return maxRedemptions;
  }


  public void setMaxRedemptions(BigDecimal maxRedemptions) {
    this.maxRedemptions = maxRedemptions;
  }


  public Campaign minimumValue(BigDecimal minimumValue) {
    
    this.minimumValue = minimumValue;
    return this;
  }

   /**
   * Get minimumValue
   * @return minimumValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getMinimumValue() {
    return minimumValue;
  }


  public void setMinimumValue(BigDecimal minimumValue) {
    this.minimumValue = minimumValue;
  }


  public Campaign maxDiscount(BigDecimal maxDiscount) {
    
    this.maxDiscount = maxDiscount;
    return this;
  }

   /**
   * Get maxDiscount
   * @return maxDiscount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getMaxDiscount() {
    return maxDiscount;
  }


  public void setMaxDiscount(BigDecimal maxDiscount) {
    this.maxDiscount = maxDiscount;
  }


  public Campaign redemptionsCount(BigDecimal redemptionsCount) {
    
    this.redemptionsCount = redemptionsCount;
    return this;
  }

   /**
   * Get redemptionsCount
   * @return redemptionsCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getRedemptionsCount() {
    return redemptionsCount;
  }


  public void setRedemptionsCount(BigDecimal redemptionsCount) {
    this.redemptionsCount = redemptionsCount;
  }


  public Campaign totalBudgetSpent(BigDecimal totalBudgetSpent) {
    
    this.totalBudgetSpent = totalBudgetSpent;
    return this;
  }

   /**
   * Get totalBudgetSpent
   * @return totalBudgetSpent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getTotalBudgetSpent() {
    return totalBudgetSpent;
  }


  public void setTotalBudgetSpent(BigDecimal totalBudgetSpent) {
    this.totalBudgetSpent = totalBudgetSpent;
  }


   /**
   * Currency denominating monetary values in this campaign (USD, GBP, EUR, AUD)
   * @return currency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Currency denominating monetary values in this campaign (USD, GBP, EUR, AUD)")

  public String getCurrency() {
    return currency;
  }




   /**
   * Currency symbol ($, £, €)
   * @return currencySymbol
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Currency symbol ($, £, €)")

  public String getCurrencySymbol() {
    return currencySymbol;
  }




  public Campaign team(String team) {
    
    this.team = team;
    return this;
  }

   /**
   * Get team
   * @return team
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTeam() {
    return team;
  }


  public void setTeam(String team) {
    this.team = team;
  }


  public Campaign channel(String channel) {
    
    this.channel = channel;
    return this;
  }

   /**
   * Get channel
   * @return channel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getChannel() {
    return channel;
  }


  public void setChannel(String channel) {
    this.channel = channel;
  }


  public Campaign purpose(String purpose) {
    
    this.purpose = purpose;
    return this;
  }

   /**
   * Get purpose
   * @return purpose
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPurpose() {
    return purpose;
  }


  public void setPurpose(String purpose) {
    this.purpose = purpose;
  }


  public Campaign budgetCode(String budgetCode) {
    
    this.budgetCode = budgetCode;
    return this;
  }

   /**
   * Get budgetCode
   * @return budgetCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBudgetCode() {
    return budgetCode;
  }


  public void setBudgetCode(String budgetCode) {
    this.budgetCode = budgetCode;
  }


  public Campaign medium(String medium) {
    
    this.medium = medium;
    return this;
  }

   /**
   * Get medium
   * @return medium
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMedium() {
    return medium;
  }


  public void setMedium(String medium) {
    this.medium = medium;
  }


  public Campaign voucherType(VoucherTypeEnum voucherType) {
    
    this.voucherType = voucherType;
    return this;
  }

   /**
   * Determines what type of vouchers can be generated for campaign. Generic vouchers (eg. SALE10) can be redeemed multiple times. Unique vouchers allow for greater control and better tracking of who and how is using your promotions.
   * @return voucherType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Determines what type of vouchers can be generated for campaign. Generic vouchers (eg. SALE10) can be redeemed multiple times. Unique vouchers allow for greater control and better tracking of who and how is using your promotions.")

  public VoucherTypeEnum getVoucherType() {
    return voucherType;
  }


  public void setVoucherType(VoucherTypeEnum voucherType) {
    this.voucherType = voucherType;
  }


  public Campaign voucherCodeType(VoucherCodeTypeEnum voucherCodeType) {
    
    this.voucherCodeType = voucherCodeType;
    return this;
  }

   /**
   * What characters should the code include when new voucher is created. Possible choices are digits, letters, and mixed.
   * @return voucherCodeType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "What characters should the code include when new voucher is created. Possible choices are digits, letters, and mixed.")

  public VoucherCodeTypeEnum getVoucherCodeType() {
    return voucherCodeType;
  }


  public void setVoucherCodeType(VoucherCodeTypeEnum voucherCodeType) {
    this.voucherCodeType = voucherCodeType;
  }


  public Campaign voucherRandomPartLength(BigDecimal voucherRandomPartLength) {
    
    this.voucherRandomPartLength = voucherRandomPartLength;
    return this;
  }

   /**
   * How long should the random part of the code be? Valid values are between 2 and 10, depending on batch size.
   * minimum: 3
   * maximum: 10
   * @return voucherRandomPartLength
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "How long should the random part of the code be? Valid values are between 2 and 10, depending on batch size.")

  public BigDecimal getVoucherRandomPartLength() {
    return voucherRandomPartLength;
  }


  public void setVoucherRandomPartLength(BigDecimal voucherRandomPartLength) {
    this.voucherRandomPartLength = voucherRandomPartLength;
  }


  public Campaign voucherPrefix(String voucherPrefix) {
    
    this.voucherPrefix = voucherPrefix;
    return this;
  }

   /**
   * A prefix that will be used to generate vouchers. Needs to be unique within project.
   * @return voucherPrefix
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A prefix that will be used to generate vouchers. Needs to be unique within project.")

  public String getVoucherPrefix() {
    return voucherPrefix;
  }


  public void setVoucherPrefix(String voucherPrefix) {
    this.voucherPrefix = voucherPrefix;
  }


   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }




  public Campaign createdBy(CampaignCreatedBy createdBy) {
    
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Get createdBy
   * @return createdBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CampaignCreatedBy getCreatedBy() {
    return createdBy;
  }


  public void setCreatedBy(CampaignCreatedBy createdBy) {
    this.createdBy = createdBy;
  }


   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }




  public Campaign updatedBy(CampaignCreatedBy updatedBy) {
    
    this.updatedBy = updatedBy;
    return this;
  }

   /**
   * Get updatedBy
   * @return updatedBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CampaignCreatedBy getUpdatedBy() {
    return updatedBy;
  }


  public void setUpdatedBy(CampaignCreatedBy updatedBy) {
    this.updatedBy = updatedBy;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Campaign campaign = (Campaign) o;
    return Objects.equals(this.type, campaign.type) &&
        Objects.equals(this.id, campaign.id) &&
        Objects.equals(this.parentId, campaign.parentId) &&
        Objects.equals(this.status, campaign.status) &&
        Objects.equals(this.name, campaign.name) &&
        Objects.equals(this.triggersOn, campaign.triggersOn) &&
        Objects.equals(this.triggerName, campaign.triggerName) &&
        Objects.equals(this.template, campaign.template) &&
        Objects.equals(this.description, campaign.description) &&
        Objects.equals(this.customerInformation, campaign.customerInformation) &&
        Objects.equals(this.maxTotalBudget, campaign.maxTotalBudget) &&
        Objects.equals(this.maxRedemptions, campaign.maxRedemptions) &&
        Objects.equals(this.minimumValue, campaign.minimumValue) &&
        Objects.equals(this.maxDiscount, campaign.maxDiscount) &&
        Objects.equals(this.redemptionsCount, campaign.redemptionsCount) &&
        Objects.equals(this.totalBudgetSpent, campaign.totalBudgetSpent) &&
        Objects.equals(this.currency, campaign.currency) &&
        Objects.equals(this.currencySymbol, campaign.currencySymbol) &&
        Objects.equals(this.team, campaign.team) &&
        Objects.equals(this.channel, campaign.channel) &&
        Objects.equals(this.purpose, campaign.purpose) &&
        Objects.equals(this.budgetCode, campaign.budgetCode) &&
        Objects.equals(this.medium, campaign.medium) &&
        Objects.equals(this.voucherType, campaign.voucherType) &&
        Objects.equals(this.voucherCodeType, campaign.voucherCodeType) &&
        Objects.equals(this.voucherRandomPartLength, campaign.voucherRandomPartLength) &&
        Objects.equals(this.voucherPrefix, campaign.voucherPrefix) &&
        Objects.equals(this.createdAt, campaign.createdAt) &&
        Objects.equals(this.createdBy, campaign.createdBy) &&
        Objects.equals(this.updatedAt, campaign.updatedAt) &&
        Objects.equals(this.updatedBy, campaign.updatedBy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, id, parentId, status, name, triggersOn, triggerName, template, description, customerInformation, maxTotalBudget, maxRedemptions, minimumValue, maxDiscount, redemptionsCount, totalBudgetSpent, currency, currencySymbol, team, channel, purpose, budgetCode, medium, voucherType, voucherCodeType, voucherRandomPartLength, voucherPrefix, createdAt, createdBy, updatedAt, updatedBy);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Campaign {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    triggersOn: ").append(toIndentedString(triggersOn)).append("\n");
    sb.append("    triggerName: ").append(toIndentedString(triggerName)).append("\n");
    sb.append("    template: ").append(toIndentedString(template)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    customerInformation: ").append(toIndentedString(customerInformation)).append("\n");
    sb.append("    maxTotalBudget: ").append(toIndentedString(maxTotalBudget)).append("\n");
    sb.append("    maxRedemptions: ").append(toIndentedString(maxRedemptions)).append("\n");
    sb.append("    minimumValue: ").append(toIndentedString(minimumValue)).append("\n");
    sb.append("    maxDiscount: ").append(toIndentedString(maxDiscount)).append("\n");
    sb.append("    redemptionsCount: ").append(toIndentedString(redemptionsCount)).append("\n");
    sb.append("    totalBudgetSpent: ").append(toIndentedString(totalBudgetSpent)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    currencySymbol: ").append(toIndentedString(currencySymbol)).append("\n");
    sb.append("    team: ").append(toIndentedString(team)).append("\n");
    sb.append("    channel: ").append(toIndentedString(channel)).append("\n");
    sb.append("    purpose: ").append(toIndentedString(purpose)).append("\n");
    sb.append("    budgetCode: ").append(toIndentedString(budgetCode)).append("\n");
    sb.append("    medium: ").append(toIndentedString(medium)).append("\n");
    sb.append("    voucherType: ").append(toIndentedString(voucherType)).append("\n");
    sb.append("    voucherCodeType: ").append(toIndentedString(voucherCodeType)).append("\n");
    sb.append("    voucherRandomPartLength: ").append(toIndentedString(voucherRandomPartLength)).append("\n");
    sb.append("    voucherPrefix: ").append(toIndentedString(voucherPrefix)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    updatedBy: ").append(toIndentedString(updatedBy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

