/*
 * Vouchery API Reference
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: hello@vouchery.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.RedemptionProductItems;
import org.openapitools.client.model.RedemptionVoucher;
import org.threeten.bp.OffsetDateTime;

/**
 * Redemption
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-02-04T15:47:26.674+01:00[Europe/Berlin]")
public class Redemption {
  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    REDEMPTION("Redemption");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_TRANSACTION_ID = "transaction_id";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_ID)
  private String transactionId;

  public static final String SERIALIZED_NAME_CUSTOMER_IDENTIFIER = "customer_identifier";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_IDENTIFIER)
  private String customerIdentifier;

  public static final String SERIALIZED_NAME_TOTAL_TRANSACTION_COST = "total_transaction_cost";
  @SerializedName(SERIALIZED_NAME_TOTAL_TRANSACTION_COST)
  private BigDecimal totalTransactionCost;

  public static final String SERIALIZED_NAME_TTL = "ttl";
  @SerializedName(SERIALIZED_NAME_TTL)
  private BigDecimal ttl;

  public static final String SERIALIZED_NAME_GRANTED_DISCOUNT = "granted_discount";
  @SerializedName(SERIALIZED_NAME_GRANTED_DISCOUNT)
  private BigDecimal grantedDiscount;

  public static final String SERIALIZED_NAME_USER_AGENT = "user_agent";
  @SerializedName(SERIALIZED_NAME_USER_AGENT)
  private String userAgent;

  public static final String SERIALIZED_NAME_VOUCHER = "voucher";
  @SerializedName(SERIALIZED_NAME_VOUCHER)
  private RedemptionVoucher voucher;

  public static final String SERIALIZED_NAME_CONFIRMED = "confirmed";
  @SerializedName(SERIALIZED_NAME_CONFIRMED)
  private Boolean confirmed;

  public static final String SERIALIZED_NAME_PRODUCT_ITEMS = "product_items";
  @SerializedName(SERIALIZED_NAME_PRODUCT_ITEMS)
  private List<RedemptionProductItems> productItems = null;

  public static final String SERIALIZED_NAME_VALIDATED_AT = "validated_at";
  @SerializedName(SERIALIZED_NAME_VALIDATED_AT)
  private OffsetDateTime validatedAt;

  public static final String SERIALIZED_NAME_EXPIRES_AT = "expires_at";
  @SerializedName(SERIALIZED_NAME_EXPIRES_AT)
  private OffsetDateTime expiresAt;

  public static final String SERIALIZED_NAME_CONFIRMED_AT = "confirmed_at";
  @SerializedName(SERIALIZED_NAME_CONFIRMED_AT)
  private OffsetDateTime confirmedAt;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private OffsetDateTime updatedAt;


   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public TypeEnum getType() {
    return type;
  }




  public Redemption transactionId(String transactionId) {
    
    this.transactionId = transactionId;
    return this;
  }

   /**
   * Unique transaction ID which identifies underlying transaction in your system, e.g. order number, invoice number
   * @return transactionId
  **/
  @ApiModelProperty(required = true, value = "Unique transaction ID which identifies underlying transaction in your system, e.g. order number, invoice number")

  public String getTransactionId() {
    return transactionId;
  }


  public void setTransactionId(String transactionId) {
    this.transactionId = transactionId;
  }


  public Redemption customerIdentifier(String customerIdentifier) {
    
    this.customerIdentifier = customerIdentifier;
    return this;
  }

   /**
   * A string uniquely identifying customer in your system. Please check customers API.
   * @return customerIdentifier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A string uniquely identifying customer in your system. Please check customers API.")

  public String getCustomerIdentifier() {
    return customerIdentifier;
  }


  public void setCustomerIdentifier(String customerIdentifier) {
    this.customerIdentifier = customerIdentifier;
  }


  public Redemption totalTransactionCost(BigDecimal totalTransactionCost) {
    
    this.totalTransactionCost = totalTransactionCost;
    return this;
  }

   /**
   * Get totalTransactionCost
   * @return totalTransactionCost
  **/
  @ApiModelProperty(required = true, value = "")

  public BigDecimal getTotalTransactionCost() {
    return totalTransactionCost;
  }


  public void setTotalTransactionCost(BigDecimal totalTransactionCost) {
    this.totalTransactionCost = totalTransactionCost;
  }


  public Redemption ttl(BigDecimal ttl) {
    
    this.ttl = ttl;
    return this;
  }

   /**
   * How many minutes should the redemption be valid for before it expires.
   * @return ttl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "How many minutes should the redemption be valid for before it expires.")

  public BigDecimal getTtl() {
    return ttl;
  }


  public void setTtl(BigDecimal ttl) {
    this.ttl = ttl;
  }


   /**
   * Get grantedDiscount
   * @return grantedDiscount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getGrantedDiscount() {
    return grantedDiscount;
  }




  public Redemption userAgent(String userAgent) {
    
    this.userAgent = userAgent;
    return this;
  }

   /**
   * Get userAgent
   * @return userAgent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUserAgent() {
    return userAgent;
  }


  public void setUserAgent(String userAgent) {
    this.userAgent = userAgent;
  }


  public Redemption voucher(RedemptionVoucher voucher) {
    
    this.voucher = voucher;
    return this;
  }

   /**
   * Get voucher
   * @return voucher
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public RedemptionVoucher getVoucher() {
    return voucher;
  }


  public void setVoucher(RedemptionVoucher voucher) {
    this.voucher = voucher;
  }


  public Redemption confirmed(Boolean confirmed) {
    
    this.confirmed = confirmed;
    return this;
  }

   /**
   * Only confirmed redemption are counted towards budget and total number of redemptions.
   * @return confirmed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Only confirmed redemption are counted towards budget and total number of redemptions.")

  public Boolean getConfirmed() {
    return confirmed;
  }


  public void setConfirmed(Boolean confirmed) {
    this.confirmed = confirmed;
  }


  public Redemption productItems(List<RedemptionProductItems> productItems) {
    
    this.productItems = productItems;
    return this;
  }

  public Redemption addProductItemsItem(RedemptionProductItems productItemsItem) {
    if (this.productItems == null) {
      this.productItems = new ArrayList<RedemptionProductItems>();
    }
    this.productItems.add(productItemsItem);
    return this;
  }

   /**
   * Array of product items, associated with a redemption
   * @return productItems
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Array of product items, associated with a redemption")

  public List<RedemptionProductItems> getProductItems() {
    return productItems;
  }


  public void setProductItems(List<RedemptionProductItems> productItems) {
    this.productItems = productItems;
  }


   /**
   * Get validatedAt
   * @return validatedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getValidatedAt() {
    return validatedAt;
  }




   /**
   * Get expiresAt
   * @return expiresAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getExpiresAt() {
    return expiresAt;
  }




   /**
   * Get confirmedAt
   * @return confirmedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getConfirmedAt() {
    return confirmedAt;
  }




   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }




   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }




  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Redemption redemption = (Redemption) o;
    return Objects.equals(this.type, redemption.type) &&
        Objects.equals(this.transactionId, redemption.transactionId) &&
        Objects.equals(this.customerIdentifier, redemption.customerIdentifier) &&
        Objects.equals(this.totalTransactionCost, redemption.totalTransactionCost) &&
        Objects.equals(this.ttl, redemption.ttl) &&
        Objects.equals(this.grantedDiscount, redemption.grantedDiscount) &&
        Objects.equals(this.userAgent, redemption.userAgent) &&
        Objects.equals(this.voucher, redemption.voucher) &&
        Objects.equals(this.confirmed, redemption.confirmed) &&
        Objects.equals(this.productItems, redemption.productItems) &&
        Objects.equals(this.validatedAt, redemption.validatedAt) &&
        Objects.equals(this.expiresAt, redemption.expiresAt) &&
        Objects.equals(this.confirmedAt, redemption.confirmedAt) &&
        Objects.equals(this.createdAt, redemption.createdAt) &&
        Objects.equals(this.updatedAt, redemption.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, transactionId, customerIdentifier, totalTransactionCost, ttl, grantedDiscount, userAgent, voucher, confirmed, productItems, validatedAt, expiresAt, confirmedAt, createdAt, updatedAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Redemption {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    transactionId: ").append(toIndentedString(transactionId)).append("\n");
    sb.append("    customerIdentifier: ").append(toIndentedString(customerIdentifier)).append("\n");
    sb.append("    totalTransactionCost: ").append(toIndentedString(totalTransactionCost)).append("\n");
    sb.append("    ttl: ").append(toIndentedString(ttl)).append("\n");
    sb.append("    grantedDiscount: ").append(toIndentedString(grantedDiscount)).append("\n");
    sb.append("    userAgent: ").append(toIndentedString(userAgent)).append("\n");
    sb.append("    voucher: ").append(toIndentedString(voucher)).append("\n");
    sb.append("    confirmed: ").append(toIndentedString(confirmed)).append("\n");
    sb.append("    productItems: ").append(toIndentedString(productItems)).append("\n");
    sb.append("    validatedAt: ").append(toIndentedString(validatedAt)).append("\n");
    sb.append("    expiresAt: ").append(toIndentedString(expiresAt)).append("\n");
    sb.append("    confirmedAt: ").append(toIndentedString(confirmedAt)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

